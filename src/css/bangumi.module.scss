@use 'module/properties';

.symbol {
    font-family: SegMDL2;
}

.title {
    text-align: center;
    margin: 2em 5% 0px 5%;
    font-size: x-large;
    font-weight: 500;
}

.ep-selector,
.season-selector {
    position: relative;
    margin: 0px;
    padding: 0px;
    width: 100%;

    >div {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }
}

.season-selector>div {
    margin: 0px 0px -0.5em;
    /*Offset #season-button-wrapper > div > p margin for underline spacing.*/
    padding: 2em 5% 0px;

    >div {
        height: auto;
        transition: .4s ease-out;
        margin: 0px 1em;
        cursor: pointer;
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-bottom-color: var(properties.get(text-color-transparent));

        >p {
            padding: 0px;
            margin: 0.5em 0px;
            transition: .4s ease-out;
            color: var(properties.get(alt-text-color));
            text-align: center;
        }

        &:hover {
            border-bottom-color: var(properties.get(text-color));

            >p {
                color: var(properties.get(text-color));
            }
        }

        &.current-season {
            cursor: auto;
            border-bottom-style: solid;
            border-bottom-width: 1px;
            border-bottom-color: var(properties.get(text-color));

            >p {
                color: var(properties.get(text-color));
                font-weight: 500;
            }
        }
    }
}

.ep-selector>div {
    margin: 0px;
    padding: calc(2em - 12px) calc(5% - 12px);
    overflow-y: hidden;
    box-sizing: content-box;
    transition: max-height .4s ease-out, padding-bottom .4s ease-out;

    >div {
        position: relative;
        height: auto;
        background-color: var(properties.get(foreground-color));
        padding: 0.6em 1em;
        margin: 12px;
        cursor: pointer;

        >* {
            margin: 0px;
            padding: 0px;
        }

        &.current-ep>p {
            font-weight: 500;
            text-decoration: underline;
        }
    }

    @supports (padding: calc(2em - min(2%, 12px)) calc(5% - min(2%, 12px))) and (margin: min(2%, 12px)) {
        padding: calc(2em - min(2%, 12px)) calc(5% - min(2%, 12px));

        >div {
            margin: min(2%, 12px);
        }
    }

    >.show-more-button {
        background: linear-gradient(to bottom, var(properties.get(background-color-transparent)) 0%, var(properties.get(background-color)) 1.5em);
        width: 90%;
        margin: 0px;
        /*Total height = padding-top 1.5em + padding-bottom 2em + line-height 1em*/
        padding: 1.5em 5% 2em 5%;
        /*padding-top for gradient, padding bottom to fill in #ep-button-wrapper padding*/
        text-align: center;
        position: absolute;
        left: 0;
        bottom: 0;
        text-decoration: none;
        line-height: 1;
        /*Line height 1em*/
        transition: opacity .4s ease-out;

        &,
        * {
            color: var(properties.get(link-text-color));
        }

        &:hover {
            cursor: pointer;
        }
    }
}

.hr {
    margin: 0px auto;
    height: 1px;
    width: 960px;
    max-width: 90%;
    border-width: 0;
    background-color: var(properties.get(horizontal-line-background-color));
}

.content,
.warning {
    margin: 2em auto;
    width: 960px;
    max-width: 90%;
}

.content {
    padding: 0px;

    .message {
        margin: 0px 0px 1em 0px;
    }

    >.format-container {
        display: flex;
        flex-wrap: wrap;
        align-items: center;

        >.select {
            width: 200px;
            max-width: 70%;
            margin: 0px 16px 16px 0px;
        }

        >.format-display {
            margin: 0px 0px 16px 0px;
            color: var(properties.get(alt-text-color));
            font-size: small;
        }
    }

    >.media-holder {
        margin: 0px 0px 2em 0px;

        >.player {
            width: 100%;
            margin: 0px 0px 16px 0px;

            >video,
            >audio {
                /* Hide mouse-over tooltips */
                pointer-events: none;
            }
        }

        >.image-container {
            width: 100%;
            margin: 0px auto 1.5em auto;

            >.image {
                width: 100%;
                margin: 0px;
                position: relative;
                padding-bottom: 56.25%;
                cursor: pointer;
            }
        }

        >.loading-text {
            text-align: center;
            color: var(properties.get(alt-text-color));
            margin: 1em 0px 2em 0px;
        }
    }

    &.video>.media-holder {
        margin: 0px 0px 1em 0px;
    }
}

.select {
    position: relative;
    box-shadow: var(properties.get(shadow));
    transition: box-shadow .4s ease-out;
    background: var(properties.get(foreground-color));

    &:not(.disabled):hover {
        box-shadow: var(properties.get(shadow-hover));
    }

    &:after {
        content: '\E70D';
        font-family: SegMDL2;
        font-size: 0.9em;
        color: var(properties.get(alt-text-color));
        top: 10px;
        right: 11px;
        position: absolute;
        pointer-events: none;
    }

    >select {
        border: none;
        border-radius: 0px;
        font-size: 0.9em;
        margin: 0px;
        width: 100%;
        padding: 5px 35px 5px 5px;
        appearance: none;
        height: 34px;
        line-height: 22px;
        background-color: var(properties.get(foreground-color));

        &::-ms-expand {
            display: none;
        }

        &:disabled {
            color: var(properties.get(alt-text-color));
            /* required on iOS */
            -webkit-text-fill-color: var(properties.get(alt-text-color));
            opacity: 1;
            cursor: wait;
        }
    }
}

.sub-title {
    width: 100%;
    margin: 32px 0px 32px 0px;

    &,
    * {
        font-size: large;
        font-weight: 500;
    }

    >.sub-title-format {
        color: var(properties.get(alt-text-color));
        font-size: small;
        font-weight: 300;
    }
}

.content.video,
.media-holder {
    .sub-title {
        margin: 32px 0px 16px 0px;
    }
}

.artist {
    color: var(properties.get(alt-text-color));
    font-size: medium;
    font-weight: 300;
}

.title>.artist {
    font-size: large;
}

.sub-title.center-align,
.artist.center-align {
    text-align: center;
}

p.artist {
    width: 100%;
    margin: -1em 0px 1em 0px;
}

.message {
    padding: 0px;
    background-color: var(properties.get(foreground-color));
    box-sizing: border-box;

    >div {
        display: inline-block;
        margin: 2em;
        width: calc(100% - 4em);

        @supports (margin: min(2em, 5%)) and (width: calc(100% - min(4em, 10%))) {
            margin: min(2em, 5%);
            width: calc(100% - min(4em, 10%));
        }

        .message-title {
            text-align: center;
            margin: 0px 0px 1em 0px;
            padding: 0px;
            font-size: x-large;
            font-weight: 500;
        }

        .message-body {
            margin: 1em 0px 0px 0px;
            padding: 0px;
            text-align: center;

            >p {
                /*margin and padding already done in #message-body wrapper*/
                margin: 0px;
                padding: 0px;
            }
        }

        .warning-button-group {
            margin: 0px -1em 0px -1em;
            display: flex;
            flex-wrap: wrap;
            justify-content: center;

            >button {
                margin: 1em 1em 0px 1em;
            }
        }
    }
}

/**Accodions/
/* Style the buttons that are used to open and close the accordion panel */
.accordion {
    background-color: var(properties.get(foreground-color));
    display: flex;
    cursor: pointer;
    margin: 0px;
    padding: 0px 1em;
    width: 100%;
    align-items: center;
    box-sizing: border-box;

    >.accordion-title {
        flex: 1;
        font-weight: 500;
        margin: 1em 0px;
        padding: 0px;
        overflow-wrap: anywhere;
    }

    >.accordion-icon {
        flex: none;
        font-family: 'Courier New', Courier, monospace;
        font-size: 1em;
        color: var(properties.get(alt-text-color));
        margin: 0px 0px 0px 1em;
        padding: 0px;
    }
}


/* Style the accordion panel. Note: hidden by default */
.accordion-panel {
    margin: 0px;
    padding: 0px 1em;
    background-color: var(properties.get(foreground-color));
    overflow: hidden;
    transition: max-height 0.2s ease-out;

    >hr {
        width: 100%;
        max-width: none;
        background-color: var(properties.get(horizontal-line-foreground-color));
    }
}

@supports (padding: 0px min(5%, 1em)) and (margin: 0px 0px 0px min(5%, 1em)) {
    .accordion {
        padding: 0px min(5%, 1em);

        >.accordion-icon {
            margin: 0px 0px 0px min(5%, 1em);
        }
    }

    .accordion-panel {
        padding: 0px min(5%, 1em);
    }
}


/*Chapters*/
.chapters>.accordion-panel {
    >p {
        transition: .4s ease-out;

        >span {
            cursor: pointer;
            color: var(properties.get(link-text-color));
        }
    }

    >.current-chapter {
        color: var(properties.get(text-color));
        font-weight: 500;
    }

    >.inactive-chapter {
        color: var(properties.get(alt-text-color));
    }
}

.download>.accordion-panel {
    >.download-options {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        padding: 0px;
        margin: 0px -0.5em -1em -0.5em;

        >div {
            max-width: 150px;
            width: 100%;
            margin: 0px 0.5em 1em 0.5em;
        }
    }

    >ul {
        padding: 0px 0px 0px 2em;
    }
}

.image-button-flexbox {
    margin: 0px -1em 1em -1em;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    >button {
        margin: 1em 1em 0px 1em;
    }
}

.ep-selector>div>div,
.player,
.image-container,
.chapters,
.download,
.message {
    box-shadow: var(properties.get(shadow));
    transition: box-shadow .4s ease-out;
    /* Make sure these elements don't have other transitions. */

    &:hover {
        box-shadow: var(properties.get(shadow-hover));
    }
}