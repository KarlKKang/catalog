@use 'module/property';
@use 'module/query';

.remember-me {
    position: relative;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin: 2em 0px;
    padding: 0px;
    /*font-size: small;*/
}

/* The container */
.checkbox-container {
    $_: property.add(checkbox-shadow-size);
    $_: property.add(checkbox-shadow-size-hover);
    $_: property.add(checkbox-shadow);
    $_: property.add(checkbox-shadow-hover);

    #{property.get(checkbox-shadow-size)}: 0 0 10px 1.3px;
    #{property.get(checkbox-shadow-size-hover)}: 0 2px 17px 4px;
    #{property.get(checkbox-shadow)}: var(property.get(checkbox-shadow-size)) var(property.get(shadow-color));
    #{property.get(checkbox-shadow-hover)}: var(property.get(checkbox-shadow-size-hover)) var(property.get(shadow-color-hover));

    @include query.touch-hover {
        #{property.get(checkbox-shadow-hover)}: var(property.get(checkbox-shadow));
    }

    & {
        /* display: block; */
        position: relative;
        padding-left: 2em;
        cursor: pointer;
        user-select: none;
    }

    &.disabled {
        cursor: wait;
    }

    >p {
        margin: 0px;
        padding: 0px;
        line-height: 1.2em;
    }

    /* Hide the browser's default checkbox */
    input {
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;
        margin: 0px;
        padding: 0px;
    }

    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 1.2em;
        width: 1.2em;
        background-color: var(property.get(foreground-color));
        box-shadow: var(property.get(checkbox-shadow));
        transition: box-shadow .4s ease-out;

        /* Create the checkmark/indicator (hidden when not checked) */
        &:after {
            content: "";
            position: absolute;
            display: none;
            left: 0.35em;
            top: 0.1em;
            width: 0.3em;
            height: 0.6em;
            border: solid var(property.get(text-color));
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }
    }

    /* On mouse-over, add box shadow */
    &:not(.disabled):hover input~.checkmark {
        box-shadow: var(property.get(checkbox-shadow-hover));
    }

    /* Show the checkmark when checked */
    input:checked~.checkmark:after {
        display: block;
    }

    input:disabled~.checkmark:after {
        border-color: var(property.get(alt-text-color));
    }
}